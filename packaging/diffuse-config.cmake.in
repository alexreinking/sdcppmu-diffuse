cmake_minimum_required(VERSION 3.26)
@PACKAGE_INIT@

macro(_diffuse_bail reason)
    set(${CMAKE_FIND_PACKAGE_NAME}_FOUND 0)
    set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE "${reason}")
    return()
endmacro()

macro(_diffuse_load)
    set(loaded 0)

    foreach (type IN ITEMS ${ARGN})
        if (EXISTS "${CMAKE_CURRENT_LIST_DIR}/diffuse-${type}-targets.cmake")
            include("${CMAKE_CURRENT_LIST_DIR}/diffuse-${type}-deps.cmake" OPTIONAL)
            include("${CMAKE_CURRENT_LIST_DIR}/diffuse-${type}-targets.cmake")
            set(loaded 1)
            break()
        endif ()
    endforeach ()

    if (NOT loaded)
        _diffuse_bail("diffuse `${ARGN}` libraries were requested but not found.")
    endif ()
endmacro()

block(
    PROPAGATE
    ${CMAKE_FIND_PACKAGE_NAME}_FOUND
    ${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE
)
    set(known_comps static shared)
    set(comp_static NO)
    set(comp_shared NO)
    foreach (comp IN LISTS ${CMAKE_FIND_PACKAGE_NAME}_FIND_COMPONENTS)
        if (comp IN_LIST known_comps)
            if (NOT ${CMAKE_FIND_PACKAGE_NAME}_FIND_REQUIRED_${comp})
                _diffuse_bail("diffuse does not support optional components (saw `${comp}`).")
            endif ()

            set(comp_${comp} YES)
        else ()
            _diffuse_bail("diffuse does not recognize component `${comp}`.")
        endif ()
    endforeach ()

    if (comp_static AND comp_shared)
        _diffuse_bail("`static` and `shared` components are mutually exclusive")
    endif ()

    if (comp_shared OR comp_static)
        # Case 1: honor package components first
        if (comp_shared)
            _diffuse_load(shared)
        else ()
            _diffuse_load(static)
        endif ()
    elseif (DEFINED diffuse_SHARED_LIBS)
        # Case 2: honor diffuse_SHARED_LIBS as a *requirement*
        if (diffuse_SHARED_LIBS)
            _diffuse_load(shared)
        else ()
            _diffuse_load(static)
        endif ()
    else ()
        # Case 3: load what's available, use BUILD_SHARED_LIBS for priority
        if (BUILD_SHARED_LIBS)
            _diffuse_load(shared static)
        else ()
            _diffuse_load(static shared)
        endif ()
    endif ()
endblock()
